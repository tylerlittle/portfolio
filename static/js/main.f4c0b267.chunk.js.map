{"version":3,"sources":["ExperienceTitle.js","ExperienceDuration.js","ExperienceDescription.js","ExperienceDescriptionContainer.js","experienceList.js","Header.js","Experience.js","EducationTitle.js","EducationMajor.js","EducationGraduation.js","educationList.js","Education.js","projectList.js","ProjectTitle.js","ProjectDescription.js","Projects.js","Logo.js","App.js","serviceWorker.js","index.js"],"names":["ExperienceTitle","this","props","title","Component","ExperienceDuration","style","color","duration","ExperienceDescription","Grid","container","direction","alignItems","item","description","ExperienceDescriptionContainer","descriptionArray","i","length","push","key","experienceList","company","Header","display","borderBottom","marginTop","paddingBottom","Experience","experiences","className","EducationTitle","EducationMajor","major","EducationGraduation","graduation","educationList","Education","education","projectList","ProjectTitle","ProjectDescription","Projects","projects","Logo","xmlns","xmlnsXlink","viewBox","width","height","d","App","xs","justifyContent","minHeight","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4c0b267.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ExperienceTitle extends Component {\r\n    render() {\r\n        return (\r\n            <h2>\r\n                {this.props.title}\r\n            </h2>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExperienceTitle;","import React, { Component } from 'react';\r\n\r\nclass ExperienceDuration extends Component {\r\n    render() {\r\n        return (\r\n            <h3 style={{ color: '#f2f2f2'}}>\r\n                {this.props.duration}\r\n            </h3>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExperienceDuration;","import React, { Component } from 'react';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nclass ExperienceDescription extends Component {\r\n    render() {\r\n        return (\r\n            <Grid container direction=\"row\" alignItems=\"center\">\r\n                <Grid item>\r\n                    <ArrowRightIcon style={{ color: '#f2f2f2'}} />\r\n                </Grid>\r\n                <Grid>\r\n                    <span style={{ color: '#f2f2f2' }}>{this.props.description}</span>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExperienceDescription;","import React, { Component } from 'react';\r\nimport ExperienceDescription from './ExperienceDescription';\r\n\r\nclass ExperienceDescriptionContainer extends Component {\r\n    render() {\r\n        let descriptionArray = [];\r\n        for (var i = 0; i < this.props.description.length; i++) {\r\n            descriptionArray.push(<ExperienceDescription key={i} description={this.props.description[i]} />);\r\n        }\r\n        return (\r\n            <div>\r\n                {descriptionArray}\r\n                <br />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExperienceDescriptionContainer;","const experienceList = [\r\n    {\r\n        title: \".Net Software Developer\",\r\n        company: \"Advanced Technologies Group\",\r\n        duration: \"May 2018 - Present  @ Advanced Technologies Group\",\r\n        description: [\r\n            \"Customize solutions based on customer requirements and feedback\",\r\n            \"Make front-end changes as well as back-end changes to database structures to suit customer needs\",\r\n            \"Selected to work on and maintain secondary project to help validate data before production use\"\r\n        ]\r\n    },\r\n    {\r\n        title: \"Tools Development Engineer Co-op\",\r\n        company: \"John Deere\",\r\n        duration: \"May 2017 - May 2018  @ John Deere\",\r\n        description: [\r\n            \"Utilize MS InfoPath to design and publish forms to MS SharePoint\",\r\n            \"Design Nintex workflows on MS SharePoint to automate business processes\",\r\n            \"Contribute to the development of a Java Web Application utilizing Spring Framework\",\r\n            \"Test Java Web Application documenting any bugs found\"\r\n        ]\r\n    }\r\n];\r\n\r\nexport default experienceList;","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <h1 style={{ display: 'inline-block', borderBottom: '1px solid', marginTop: '3em', paddingBottom: '1em' }}>\r\n                {this.props.title}\r\n            </h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport ExperienceTitle from './ExperienceTitle';\r\nimport ExperienceDuration from './ExperienceDuration';\r\nimport ExperienceDescriptionContainer from './ExperienceDescriptionContainer';\r\nimport './experience.css';\r\nimport experienceList from './experienceList';\r\nimport Header from './Header';\r\n\r\nexport default function Experience() {\r\n\r\n    let experiences = [];\r\n    for (var i=0; i < experienceList.length; i++) {\r\n        experiences.push(\r\n            <div key={i}>\r\n                <ExperienceTitle title={experienceList[i].title} />\r\n                <ExperienceDuration duration={experienceList[i].duration} />\r\n                <ExperienceDescriptionContainer description={experienceList[i].description} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"experienceContainer\">\r\n            <Header title=\"Experience\" />\r\n            {experiences}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function EducationTitle(props) {\r\n    return (\r\n        <h2>\r\n            {props.title}\r\n        </h2>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function EducationMajor(props) {\r\n    return (\r\n        <h3>\r\n            {props.major}\r\n        </h3>\r\n    )\r\n}","import React, { Component } from 'react';\r\n\r\nclass EducationGraduation extends Component {\r\n    render() {\r\n        return (\r\n            <h4>\r\n                {this.props.graduation}\r\n            </h4>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EducationGraduation;","const educationList = [\r\n    {\r\n        title: \"University of Northern Iowa\",\r\n        major: \"BS in Computer Science\",\r\n        graduation: \"May 2018\"\r\n    }\r\n]\r\n\r\nexport default educationList;","import React from 'react';\r\nimport EducationTitle from './EducationTitle';\r\nimport EducationMajor from './EducationMajor';\r\nimport EducationGraduation from './EducationGraduation';\r\nimport './education.css';\r\nimport educationList from './educationList';\r\nimport Header from './Header';\r\n\r\nexport default function Education() {\r\n\r\n    let education = [];\r\n    for (var i=0; i < educationList.length; i++) {\r\n        education.push(\r\n            <div key={i}>\r\n                <EducationTitle title={educationList[i].title} />\r\n                <EducationMajor major={educationList[i].major} />\r\n                <EducationGraduation graduation={educationList[i].graduation} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"educationContainer\">\r\n            <Header title=\"Education\" />\r\n            {education}\r\n        </div>\r\n    )\r\n}","const projectList = [\r\n    {\r\n        title: \"Earthworx Civil Solutions, LLC\",\r\n        description: \"Web Application built with React and Semantic-UI-React for a construction company named Earthworx Civil Solutions, LLC. located in eastern Iowa.\"\r\n    }\r\n]\r\n\r\nexport default projectList;","import React from 'react';\r\n\r\nexport default function ProjectTitle(props) {\r\n    return (\r\n        <h2>\r\n            {props.title}\r\n        </h2>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function ProjectDescription(props) {\r\n    return (\r\n        <h4 style={{ color: '#f2f2f2' }}>\r\n            {props.description}\r\n        </h4>\r\n    )\r\n}","import React from 'react';\r\nimport './projects.css';\r\nimport projectList from './projectList';\r\nimport Header from './Header';\r\nimport ProjectTitle from './ProjectTitle';\r\nimport ProjectDescription from './ProjectDescription';\r\n\r\nexport default function Projects() {\r\n\r\n    let projects = [];\r\n    for (var i=0; i < projectList.length; i++) {\r\n        projects.push(\r\n            <div key={i}>\r\n                <ProjectTitle title={projectList[i].title} />\r\n                <ProjectDescription description={projectList[i].description} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"projectsContainer\">\r\n            <Header title=\"Projects\" />\r\n            {projects}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <svg className=\"logo\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" viewBox=\"129.204 94.714 359.102 415.224\" width=\"355.1\" height=\"411.22\">\r\n            <path className=\"hexagon_loader\"\r\n                d=\"M307.76 95.71 L485.31 197.76 v206.12 L307.76 506.94 130.2 403.88 V197.76 L307.76 95.71\" />\r\n            <path className=\"letterTfirst_loader\"\r\n                d=\"M175.2 250.76 L275.2 250.76\" />\r\n            <path className=\"letterTsecond_loader\"\r\n                d=\"M225.2 250.76 L225.2 350.76\" />\r\n            <path className=\"letterLfirst_loader\"\r\n                d=\"M350.2 250.76 L350.2 350.76\" />\r\n            <path className=\"letterLsecond_loader\"\r\n                d=\"M350.2 350.76 H425.76\" />\r\n        </svg>\r\n    )\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Experience from './Experience';\nimport Education from './Education';\nimport Projects from './Projects';\nimport { Grid } from '@material-ui/core';\nimport Logo from './Logo';\nimport './logo.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Grid container direction='column' alignItems='center'>\n        <Grid item xs={12} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', minHeight: '100vh' }}>\n          <Logo />\n        </Grid>\n        <Grid item xs={12}>\n          <Experience />\n        </Grid>\n        <Grid item xs={12}>\n          <Education />\n        </Grid>\n        <Grid item xs={12}>\n          <Projects />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}